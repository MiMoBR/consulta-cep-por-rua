import requests

def consulta_cep(cep):
    url = f'https://viacep.com.br/ws/{cep}/json/'
    try:
        response = requests.get(url)
        # Verifica se a requisição foi bem-sucedida (status code 200)
        if response.status_code == 200:
            try:
                return response.json()  # Tenta converter para JSON
            except ValueError:
                print(f"Erro ao decodificar a resposta em JSON para o CEP {cep}")
                return None
        else:
            print(f"Erro na requisição para o CEP {cep}: Status Code {response.status_code}")
            return None
    except requests.exceptions.RequestException as e:
        print(f"Erro de conexão para o CEP {cep}: {e}")
        return None

ceps = ['4001000', '4001100', '4001900', '4002000', '4002900', '4003000', '4003900', '4004000', '4004100', '4004900', '4005000', '4005100', '4005900', '4006000', '4006900', '4007000', '4007100', '4007900', '4008000', '4008100', '4008900', '4009000', '4009900', '4010000', '4010100', '4010200', '4010900', '4011000', '4011900', '4012000', '4012100', '4012900', '4013000', '4013900', '4014000', '4014900', '4015000', '4015901', '4016000', '4017000', '4017100', '4018000', '4018900', '4019000', '4019100', '4020000', '4020900', '4021000', '4022000', '4022900', '4023000', '4023900', '4024000', '4024900', '4025000', '4025900', '4026000', '4027000', '4028000', '4028900', '4029000', '4029100', '4029200', '4029901', '4030000', '4031000', '4031100', '4032000', '4032100', '4035000', '4035959', '4036000', '4036100', '4036200', '4036902', '4037000', '4038000', '4038900', '4039000', '4039900', '4040000', '4040900', '4041000', '4041900', '4042000', '4042901', '4043000', '4043100', '4043200', '4043300', '4043400', '4043900', '4044000', '4044900', '4045000', '4045900', '4046000', '4046100', '4046200', '4046300', '4046400', '4046500', '4046959', '4047000', '4048000', '4049000', '4050000', '4051000', '4052000', '4052100', '4053000', '4054000', '4054100', '4055000', '4055100', '4055900', '4057000', '4057900', '4058000', '4059000', '4060000', '4061000', '4062000', '4062900', '4063000', '4063900', '4064000', '4064900', '4065000', '4065900', '4066000', '4067000', '4068000', '4068100', '4068900', '4069000', '4069900', '4070000', '4071000', '4071900', '4072000', '4072100', '4072900', '4074000', '4074900', '4075000', '4075900', '4076000', '4076900', '4077000', '4077900', '4078000', '4078900', '4079000', '4079900', '4080000', '4080900', '4081000', '4081900', '4082000', '4082900', '4083000', '4083900', '4084000', '4084100', '4084900', '4085000', '4085900', '4086000', '4086900', '4087000', '4087900', '4088000', '4088900', '4089000', '4089900', '4090000', '4090900', '4093901', '4094000', '4094901', '4097900', '4098901', '4101000', '4101100', '4101200', '4101300', '4101900', '4102000', '4102900', '4103000', '4104000', '4104900', '4105000', '4105900', '4106000', '4106900', '4107000', '4108000', '4108100', '4109000', '4109100', '4110000', '4110100', '4110900', '4111000', '4111100', '4112000', '4112901', '4113000', '4113110', '4113900', '4114000', '4114100', '4115000', '4115100', '4115900', '4116000', '4116100', '4116200', '4117000', '4117100', '4117900', '4118000', '4118100', '4119000', '4119100', '4119900', '4120000', '4120100', '4120900', '4121000', '4121100', '4121900', '4122000', '4122900', '4123000', '4124000', '4124100', '4124200', '4125000', '4125100', '4125200', '4126000', '4126100', '4127000', '4127110', '4128000', '4129000', '4130000', '4130100', '4131000', '4131100', '4131900', '4132000', '4132959', '4133000', '4133100', '4133200', '4133300', '4134000', '4134110', '4134900', '4135000', '4136000', '4136100', '4136900', '4137000', '4137100', '4138000', '4139000', '4140000', '4140100', '4140900', '4141000', '4141100', '4141900', '4142000', '4142110', '4142900', '4143000', '4144000', '4144100', '4144900', '4145000', '4146000', '4146100', '4146903', '4147000', '4147100', '4148000', '4149000', '4149100', '4150000', '4150900', '4151000', '4151100', '4151900', '4152000', '4152100', '4153000', '4153100', '4154000', '4154100', '4155000', '4155100', '4155200', '4156000', '4156110', '4156900', '4157010', '4158000', '4159090', '4159200', '4163005', '4163290', '4169000', '4180170', '4181130', '4183100', '4185165', '4191080', '4191180', '4230220', '4233450', '4236220', '4258010', '4260020', '4271001', '4274010', '4289040', '4290010', '4290100', '4292010', '4293010', '4293900', '4301000', '4301900', '4302000', '4302100', '4303000', '4303100', '4303200', '4303900', '4304000', '4304110', '4305000', '4306000', '4307000', '4307100', '4308000', '4308900', '4309010', '4309900', '4310000', '4310100', '4311000', '4311100', '4311900', '4312000', '4312100', '4313000', '4313100', '4313200', '4314000', '4314100', '4315000', '4316000', '4316100', '4317000', '4317100', '4317200', '4317900', '4318000', '4318100', '4319000', '4319100', '4320000', '4320100', '4321000', '4321100', '4321900', '4323000', '4323100', '4323210', '4324000', '4324100', '4324230', '4325000', '4326020', '4326120', '4329000', '4329900', '4330000', '4330100', '4330900', '4331000', '4331100', '4332000', '4332100', '4333000', '4334070', '4334120', '4335050', '4336000', '4337000', '4337100', '4337210', '4338150', '4342000', '4342100', '4342970', '4343000', '4343100', '4343900', '4344000', '4344100', '4344900', '4345000', '4346000', '4346100', '4347000', '4347100', '4347900', '4348000', '4348100', '4349000', '4349100', '4349200', '4350000', '4351000', '4351100', '4355000', '4355100', '4355900', '4356000', '4356100', '4357000', '4357100', '4357900', '4358010', '4358100', '4359000', '4359100', '4360000', '4360900', '4361000', '4361100', '4362000', '4363000', '4363100', '4363900', '4364000', '4365000', '4366000', '4366900', '4367000', '4367110', '4368003', '4368110', '4368971', '4369000', '4369100', '4370003', '4370100', '4370970', '4371000', '4372000', '4372100', '4373000', '4374000', '4375000', '4376000', '4376110', '4377010', '4377100', '4377200', '4378000', '4378100', '4378200', '4378300', '4378400', '4378500', '4378959', '4379000', '4381000', '4382020', '4382100', '4382200', '4383000', '4383110', '4384000', '4384100', '4385000', '4385100', '4386000', '4386100', '4387002', '4387100']
for cep in ceps:
    resultado = consulta_cep(cep)
    if resultado:
        print(f"CEP: {cep} - Rua: {resultado.get('logradouro', 'Não encontrado')}")
    else:
        print(f"CEP: {cep} - Resultado não disponível")
